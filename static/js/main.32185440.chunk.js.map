{"version":3,"sources":["animation.jsx","components/MovieBox.js","components/MoviePlayground.js","components/NaviBar.js","components/MovieSidePage.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["count","onEnter","console","time","props","onEntered","timeEnd","onExit","onExited","this","isIn","in","timeout","unmountOnExit","classNames","CSSTransition","children","currentChildren","constructor","Function","className","style","React","cloneElement","animationDuration","Component","defaultProps","MovieBox","state","index","showDetail","slideIn","bgColor","titleColor","addButtonColor","crew","cast","afterCast","similarMovies","afterSimilarMovies","recommendMovies","afterRecommendMovies","backgrounds","afterBackgrounds","isSimilarMovieReady","isRecommendMovieReady","isBackgroundsReady","isTopBilledCastReady","showMovieDetail","log","openDetail","movie","event","stopPropagation","nativeEvent","stopImmediatePropagation","window","confirm","id","removeMovieFromWatchList","localWatchlist","JSON","parse","localStorage","getItem","filter","e","setItem","stringify","showWatchlist","currentTarget","setState","addToWatchList","alert","watchMovies","title","poster","overview","release_date","vote_average","Array","from","push","checkAvailable","watchlist","comp","map","i","final","indexOf","scoreClassName","movieindex","key","isShow","onClick","isWatchListMode","bind","handleRemoveWatchList","class","src","MoviePlayground","componentWillReceiveProps","nextProps","routerUrl","message","updateComponent","fetchMoreData","movieBoxes","pageNumInt","pageNum","urlString","category","toString","$","ajax","url","success","searchResults","results","forEach","poster_path","undefined","date","replace","vote","length","refs","filterQuery","value","toLowerCase","movies","concat","error","xhr","status","err","hasMore","pageType","hasData","nextState","pathlist","split","searchCategory","searchMovieByCategory","searchKey","searchMovieByName","tempWatchlist","prototype","call","setTimeout","searchKeyword","filterQueryKey","newList","type","aria-label","placeholder","ref","onChange","handlerFilter","dataLength","next","loader","openMovieDetail","NaviBar","handleEnterKey","keyCode","handleSumbit","gotoSearchPage","gotoHomePage","gotoAllMoviePage","gotoWatchListPage","gotoMovieCategoryPage","role","handleHomepage","data-toggle","data-target","aria-controls","aria-expanded","handleAllMovie","href","aria-haspopup","aria-labelledby","handleCategoryMovie","handleWatchList","onKeyPress","MovieSidePage","isClose","updateMoveDetailPage","document","getElementById","scrollTop","isSimilarMovieLoading","isRecommendMovieLoading","isBackgroundsLoading","isTopBilledCastLoading","isCrewLoading","isCrewReady","getMovieDetail","getSimilarMovie","getRecommendMovie","getBackgrounds","colors","movieId","similar","similarMovie","slice","posters","backdrop","file_path","recommend","recommendMovie","backdrop_path","detail","credits","profile_path","crewList","movieBlock","Math","min","hidePage","startHideDetailPage","aria-hidden","onEnteredCalled","onExitedCalled","handleNormalClick","backgroundColor","startHidePage","target","getColors","getPosterColors","position","alt","color","substring","text","styles","buildStyles","textColor","pathColor","trailColor","handleAddMoveInWatchList","name","job","character","handleAddMovieBlocks","background","App","movieDetail","hideMovieSidePage","startHideMovieSidePage","newUrl","showMovieSidePage","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.32185440.chunk.js","sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nlet count = 0\nexport default class Animation extends React.Component {\n  static defaultProps = {\n    in: true,\n    timeout: 1000,\n    unmountOnExit: true,\n    classNames: '',\n    onEnter () {},\n    onEntered () {},\n    onExit () {},\n    onExited () {}\n  }\n  constructor () {\n    super()\n    this.count = count++\n  }\n  onEnter = () => {\n    console.time(`enter${this.count}`)\n    this.props.onEnter()\n  }\n  onEntered = () => {\n    console.timeEnd(`enter${this.count}`)\n    this.props.onEntered()\n  }\n  onExit = () => {\n    console.time(`exit${this.count}`)\n    this.props.onExit()\n  }\n  onExited = () => {\n    console.timeEnd(`exit${this.count}`)\n    this.props.onExited()\n  }\n  get children () {\n    const { children, timeout } = this.props\n    let currentChildren = children\n    if (children.constructor !== Function) {\n      const {\n        props: { className = '', style = {} }\n      } = children\n\n      currentChildren = React.cloneElement(children, {\n        className: `animated ${className}`,\n        style: {\n          ...{\n            '--webkit-animation-duration': `${timeout}ms`,\n            animationDuration: `${timeout}ms`\n          },\n          ...style\n        }\n      })\n    }\n\n    return currentChildren\n  }\n\n  render () {\n    const { in: isIn, timeout, unmountOnExit, classNames } = this.props\n\n    return (\n      <CSSTransition\n        in={isIn}\n        timeout={timeout}\n        unmountOnExit={unmountOnExit}\n        classNames={classNames}\n        onEnter={this.onEnter}\n        onEntered={this.onEntered}\n        onExit={this.onExit}\n        onExited={this.onExited}\n      >\n        {this.children}\n      </CSSTransition>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./moviebox.css\";\nimport \"./moviedetail.css\"\n\nimport $ from \"jquery\";\nimport Animation from '../animation'\nimport { CSSTransition } from 'react-transition-group';\nimport { ColorExtractor } from \"react-color-extractor\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nclass MovieBox extends Component {\n    state = {\n        index: 0,\n        showDetail: false,\n        slideIn: false,\n        bgColor: \"#3caf8e\",\n        titleColor:\"#edb05b\",\n        addButtonColor: \"#000000\",\n        crew: [],\n        cast: [],\n        afterCast: [],\n        similarMovies: [],\n        afterSimilarMovies: [],\n        recommendMovies: [],\n        afterRecommendMovies: [],\n        backgrounds: [],\n        afterBackgrounds: [],\n        isSimilarMovieReady: false,\n        isRecommendMovieReady: false,\n        isBackgroundsReady: false,\n        isTopBilledCastReady: false,\n    };\n\n    handleNormalClick(event) {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    }\n\n    handleRemoveWatchList(event) {\n        var popconfirm = window.confirm(\"Do you want to delet this movie from watchlist?\")\n        if (popconfirm) {\n            var id = this.props.movie.id;\n            this.removeMovieFromWatchList(id);\n        }\n    }\n\n    // remove the movie from watchlist\n    removeMovieFromWatchList(id) {\n        var localWatchlist = JSON.parse(localStorage.getItem(\"motiveWatchList\"));\n        localWatchlist = localWatchlist.filter(function (e) {\n            return e.id !== id;\n        });\n        localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n        this.props.showWatchlist();\n    }\n\n    hideMovieDetail(event) {\n        if (event.currentTarget.id === \"blure\" && this.state.showDetail) {\n            this.setState({\n                slideIn: false,\n            });\n        }\n    };\n\n    handleAddMoveInWatchList(event) {\n        var id = this.props.movie.id;\n        this.addToWatchList(id);\n        alert(\"Done. Alread add movie to watch list.\")\n    }\n    // add the movie in watchlist\n    addToWatchList(id) {\n        var watchMovies = {\n            id: id,\n            title: this.props.movie.title,\n            poster: this.props.movie.poster,\n            overview: this.props.movie.overview,\n            release_date: this.props.movie.release_date,\n            vote_average: this.props.movie.vote_average\n        };\n\n        var localWatchlist = [];\n        if (localStorage.getItem(\"motiveWatchList\") !== null) {\n            localWatchlist = Array.from(\n                JSON.parse(localStorage.getItem(\"motiveWatchList\"))\n            );\n            if (localWatchlist) {\n                localWatchlist.push(watchMovies);\n                localWatchlist = this.checkAvailable(localWatchlist, \"id\");\n                localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n            }\n        } else {\n            localWatchlist.push(watchMovies);\n            localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n        }\n    }\n\n    checkAvailable(watchlist, comp) {\n        const unique = watchlist\n            .map(e => e[comp])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => watchlist[e])\n            .map(e => watchlist[e]);\n        return unique;\n    }\n\n    \n    showMovieDetail = () => {\n        console.log(\"click\");\n        this.props.openDetail(this.props.movie)\n    };\n\n    onEnterCalled() {\n        if (this.state.showDetail === false && this.state.slideIn) {\n            this.setState({\n                showDetail: true,\n            })\n        }\n    }\n\n    onExitedCalled() {\n        if (this.state.showDetail && !this.state.slideIn) {\n            this.setState({\n                showDetail: false,\n            })\n        }\n    }\n\n\n    render() {\n        var scoreClassName = \"postscore\"\n        if (this.props.movieindex === 0) {\n            scoreClassName = \"postscore scprenum1\"\n        } else if (this.props.movieindex === 1) {\n            scoreClassName = \"postscore scprenum2\"\n        } else if (this.props.movieindex === 2) {\n            scoreClassName = \"postscore scprenum3\"\n        }\n        const showHideClassName = this.state.showDetail ? \"modal display-block\" : \"modal display-none\";\n        const processSlice = this.props.movie.vote_average * 10 / 5\n        return (\n            <div key={this.props.movie.id} className={this.props.movie.isShow === true ? \"col-xs-6 col-sm-3 visibility-visible marginbottom1rem moviebox\" : \"display-none\"}>\n                <div className=\"card md-3 shadow-sm\" id={this.props.movie.id} onClick={this.props.isWatchListMode === false ? this.showMovieDetail.bind(this) : this.handleRemoveWatchList.bind(this)} >\n                    <div className=\"poster hovereffect\">\n                        <img\n                            class=\"postimage\"\n                            id={this.props.movie.id}\n                            src={this.props.movie.poster}\n                        />\n                        <div class=\"overlay\">\n                            <p className=\"textjustify\">{this.props.movie.overview}</p>\n                        </div>\n                        <div class={scoreClassName}>\n                            <strong class=\"postscoretext\">{this.props.movie.vote_average}</strong>\n                        </div>\n                    </div>\n                    <div class=\"titlerow\">\n                        <p class=\"titlerowleft\">{this.props.movie.title}</p>\n                        <p class=\"titlerowright\">{this.props.movie.release_date}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieBox;\n","import React, { Component } from \"react\";\nimport MovieBox from \"./MovieBox.js\";\nimport \"./moviedetail.css\"\nimport $ from \"jquery\";\nimport { withRouter } from \"react-router\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass MoviePlayground extends Component {\n    constructor(props) {\n        super(props);\n        const { routerUrl } = this.props.routerUrl;\n        this.state = {\n            movies: [],\n            hasMore: true,\n            isWatchListMode: false,\n            pageType: \"category\",\n            pageNum: 1,\n            category: \"popular\",\n            routerUrl: \"/\",\n            hasData: false,\n        };\n        this.pageNum = 5;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.routerUrl === this.state.routerUrl) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.routerUrl === this.state.routerUrl) {\n            return\n        }\n        var message = \"componentWillReceiveProps:\" + nextProps.routerUrl\n        this.updateComponent(nextProps.routerUrl, message)\n        this.setState({\n            routerUrl: nextProps.routerUrl\n        })\n    }\n\n    // processing with different url\n    componentDidMount() {\n        this.updateComponent(\"/\", \"entry\")\n    }\n\n    updateComponent(url, from) {\n        var pathlist = url.split(\"/\")\n        var searchCategory = \"popular\"\n        console.log(\"updateComponent:: \", pathlist)\n        if (pathlist.length > 1 && pathlist[1] === \"watchlist\") {\n            this.setState({\n                hasMore: false,\n                isWatchListMode: true,\n                pageType: \"watchlist\",\n            })\n            this.showWatchlist()\n            return\n        }\n        if (pathlist.length === 3 && pathlist[1] === \"search\" && pathlist[2] !== \"\") {\n            this.setState({\n                hasMore: false,\n                isWatchListMode: false,\n                pageType: \"search\",\n            })\n            var searchKey = pathlist[2]\n            this.searchMovieByName(searchKey);\n            return\n        }\n        if (pathlist.length === 3 && pathlist[1] === \"movie\" && (pathlist[2] === \"top_rated\" || pathlist[2] === \"upcoming\" || pathlist[2] === \"now_playing\")) {\n            searchCategory = pathlist[2]\n        }\n        this.setState({\n            isWatchListMode: false,\n            hasMore: true,\n            pageType: \"category\",\n        })\n        this.searchMovieByCategory(searchCategory);\n    }\n\n    //grab the watch list and show them\n    showWatchlist() {\n        var movieBoxes = [];\n        var tempWatchlist = [];\n        var localWatchlist = [];\n        localWatchlist = JSON.parse(localStorage.getItem(\"motiveWatchList\"));\n        console.log(localWatchlist)\n        if (localWatchlist) {\n            tempWatchlist = localWatchlist;\n        }\n        Array.prototype.forEach.call(tempWatchlist, movie => {\n            movie.isShow = true\n            movieBoxes.push(movie);\n        });\n        setTimeout(() => {\n            this.setState({\n                movies: movieBoxes,\n                hasData: true,\n            });\n        }, 0);\n    }\n\n    // filter movies by cateogyr, only four kinds: popular, top_rated, upcoming and now_playing\n    searchMovieByCategory(searchCategory) {\n        var movieBoxes = [];\n        setTimeout(() => {\n            this.setState({\n                movies: [],\n                category: searchCategory,\n                pageNum: 1,\n                hasData: false,\n            });\n        }, 0);\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            searchCategory +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&page=1\";\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                results.forEach(movie => {\n                    movie.poster =\n                        \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    movie.isShow = true\n                    movieBoxes.push(movie);\n                });\n\n                setTimeout(() => {\n                    this.setState({\n                        movies: movieBoxes,\n                        hasData: true,\n                    });\n                }, 0);\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch movie data, 10001\");\n            }\n        });\n    }\n\n\n    // search movies by input keyword\n    searchMovieByName(searchKeyword) {\n        const urlString =\n            \"https://api.themoviedb.org/3/search/movie?api_key=1e70c91a272209d404c18c8679f75072&query=\" +\n            searchKeyword;\n\n        this.setState({\n            movies: [],\n            hasData: false,\n        });\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                var movieBoxes = [];\n                results.forEach(movie => {\n                    if (movie.poster_path !== null) {\n                        movie.poster =\n                            \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    } else {\n                        movie.poster =\n                            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSB-hMdo9NAj_4K1vtOpJ-DxQO-d_7Uoh8kUV7C6i32ebTW3NBGQQ&s\";\n                    }\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    movie.isShow = true\n                    movieBoxes.push(movie);\n                });\n\n                this.setState({\n                    movies: movieBoxes,\n                    hasData: true,\n                });\n            },\n            error: (xhr, status, err) => {\n\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    fetchMoreData = () => {\n        var movieBoxes = [];\n        var pageNumInt = this.state.pageNum + 1\n        this.setState({\n            pageNum: pageNumInt,\n        })\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            this.state.category +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&page=\" + pageNumInt.toString();\n        console.log(\"url: \", urlString)\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                results.forEach(movie => {\n                    movie.poster =\n                        \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    if (this.refs.filterQuery.value.toLowerCase().length !== 0 ) {\n                        if (movie.title.toLowerCase().indexOf(this.refs.filterQuery.value.toLowerCase()) >= 0) {\n                            movie.isShow = true\n                        } else {\n                            movie.isShow = false\n                        }\n                    } else {\n                        movie.isShow = true\n                    }\n                    movieBoxes.push(movie);\n                });\n                this.setState({\n                    movies: this.state.movies.concat(movieBoxes),\n                });\n            },\n            error: (xhr, status, err) => {\n                console.log(err)\n                console.error(\"Failed to fetch movie data, 10001\");\n            }\n        });\n    };\n\n    handlerFilter() {\n        let filterQueryKey = this.refs.filterQuery.value.toLowerCase();\n        const newList = this.state.movies\n        newList.forEach(movie => {\n            var oriTiele = movie.title.toLowerCase()\n            if (oriTiele.indexOf(filterQueryKey) >= 0) {\n                movie.isShow = true;\n            } else {\n                movie.isShow = false;\n            }\n        })\n        this.setState({\n            movies: newList,\n        })\n    }\n\n    openMovieDetail(movie) {\n        this.props.showDetail(movie)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row margintop20 padding0_10 mobilemargintop\">\n                    <div class={this.state.pageType === \"category\" ? \"input-group \" : \"display-none\"}>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Filter Movie</span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" placeholder=\"input text\" ref=\"filterQuery\" onChange={this.handlerFilter.bind(this)} />\n                    </div>\n\n                    <InfiniteScroll\n                        className=\"row infinitrow\"\n                        dataLength={this.state.movies.length}\n                        next={this.fetchMoreData.bind(this)}\n                        hasMore={this.state.hasMore}\n                        loader={<h4>Loading...</h4>}>\n                        {this.state.movies.map((movie, index) => (\n                            <MovieBox key={movie.id} movie={movie} movieindex={this.state.pageType === \"category\" ? index : 4} isWatchListMode={this.state.isWatchListMode} showWatchlist={this.showWatchlist.bind(this)} openDetail={this.openMovieDetail.bind(this)}/>\n                        ))}\n                    </InfiniteScroll>\n                </div>\n                <div className={this.state.movies.length === 0 ? \"showblock\" : \"hideblock\"} >\n                    <h1 className={this.state.hasData ? \"showblock showincenter\" : \"hideblock\"}>NoData</h1>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default MoviePlayground;","import React, { Component } from \"react\";\n\n\n\nclass NaviBar extends Component {\n    state = {};\n\n    handleSumbit(event) {\n        let searchKey = this.refs.searchKey.value;\n        this.props.gotoSearchPage(searchKey)\n    }\n\n    handleHomepage() {\n        this.props.gotoHomePage();\n    }\n\n    handleAllMovie() {\n        this.props.gotoAllMoviePage();\n    }\n\n    handleWatchList() {\n        this.props.gotoWatchListPage();\n    }\n\n    handleCategoryMovie(category) {\n        this.props.gotoMovieCategoryPage(category);\n    }\n\n    handleEnterKey = (e) => {\n        if(e.nativeEvent.keyCode === 13){\n             this.handleSumbit()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\" role=\"navigation\">\n                    <p class=\"navbar-brand\" onClick={this.handleHomepage.bind(this)}>MotivoMovie</p>\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul class=\"navbar-nav mr-auto\">\n                            <li class=\"nav-item active\">\n                                <p class=\"nav-link\" onClick={this.handleAllMovie.bind(this)}>All Movies <span class=\"sr-only\">(current)</span></p>\n                            </li>\n                            <li class=\"nav-item dropdown\">\n                                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    Categorys\n        </a>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"popular\")}>Popular</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"top_rated\")}>Top Rated</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"upcoming\")}>Uncoming</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"now_playing\")}>Now Playing</a>\n                                </div>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" onClick={this.handleWatchList.bind(this)}>Watch List</a>\n                            </li>\n                        </ul>\n                        <div class=\"form-inline my-2 my-lg-0\" >\n                            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search Movie\" ref=\"searchKey\" onKeyPress={this.handleEnterKey}/>\n                            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={this.handleSumbit.bind(this)}>Search</button>\n                        </div>\n                    </div>\n                </nav>\n\n            </div>\n        );\n    }\n}\n\nexport default NaviBar;\n\n","\nimport React, { Component } from 'react'\nimport \"./moviedetail.css\"\nimport $ from \"jquery\";\nimport { ColorExtractor } from \"react-color-extractor\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { CSSTransition } from 'react-transition-group';\n\n\n\nexport default class MovieSidePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slideIn: false,\n            movie: props.movie,\n            bgColor: \"#3caf8e\",\n            titleColor: \"#edb05b\",\n            addButtonColor: \"#000000\",\n            crew: [],\n            cast: [],\n            afterCast: [],\n            similarMovies: [],\n            afterSimilarMovies: [],\n            recommendMovies: [],\n            afterRecommendMovies: [],\n            backgrounds: [],\n            afterBackgrounds: [],\n            isSimilarMovieLoading:true,\n            isRecommendMovieLoading:true,\n            isBackgroundsLoading:true,\n            isTopBilledCastLoading:true,\n            isCrewLoading: true,\n            isCrewReady: false,\n            isSimilarMovieReady: false,\n            isRecommendMovieReady: false,\n            isBackgroundsReady: false,\n            isTopBilledCastReady: false,\n        };\n    }\n\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.movie === this.state.movie) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    componentDidMount() {\n        this.updateMoveDetailPage(this.props.movie)\n        this.setState({\n            movie: this.props.movie,\n            slideIn: true,\n        })\n    }\n\n\n\n    componentWillReceiveProps = (nextProps) => {\n        console.log(\"--->componentWillReceiveProps:\", nextProps)\n        if (nextProps.isClose) {\n            this.setState({\n                slideIn: false,\n            })\n        } else if (nextProps.showDetail) {\n            this.setState({\n                movie: nextProps.movie,\n                slideIn: true,\n            })\n            this.updateMoveDetailPage(nextProps.movie)\n            let mainPage = document.getElementById(\"modal-main\")\n            mainPage.scrollTop = 0;\n        } else {\n            this.setState({\n                slideIn: false,\n\n\n            })\n        }\n    }\n\n    updateMoveDetailPage(movie) {\n        console.log(\"updateMoveDetailPage\", this.props.movie.id)\n        this.getMovieDetail(movie.id);\n        this.getSimilarMovie(movie.id);\n        this.getRecommendMovie(movie.id);\n        this.getBackgrounds(movie.id);\n        this.setState({\n            showDetail: true,\n            slideIn: true,\n        });\n    }\n\n\n    getPosterColors(movie, colors) {\n        console.log('color:: ', colors)\n        this.setState({\n            bgColor: colors[0],\n            titleColor: colors[1],\n            addButtonColor: colors[4],\n        })\n    }\n\n    handleAddMoveInWatchList() {\n        var id = this.props.movie.id;\n        this.addToWatchList(id);\n        alert(\"Done. Alread add movie to watch list.\")\n    }\n\n    // add the movie in watchlist\n    addToWatchList(id) {\n        var watchMovies = {\n            id: id,\n            title: this.props.movie.title,\n            poster: this.props.movie.poster,\n            overview: this.props.movie.overview,\n            release_date: this.props.movie.release_date,\n            vote_average: this.props.movie.vote_average\n        };\n\n        var localWatchlist = [];\n        if (localStorage.getItem(\"motiveWatchList\") !== null) {\n            localWatchlist = Array.from(\n                JSON.parse(localStorage.getItem(\"motiveWatchList\"))\n            );\n            if (localWatchlist) {\n                localWatchlist.push(watchMovies);\n                localWatchlist = this.checkAvailable(localWatchlist, \"id\");\n                localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n            }\n        } else {\n            localWatchlist.push(watchMovies);\n            localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n        }\n    }\n\n    getSimilarMovie(movieId) {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            movieId +\n            \"/similar?api_key=1e70c91a272209d404c18c8679f75072&language=en-US\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var similar = searchResults.results;\n                if (similar.length === 0) {\n                    this.setState({ \n                        isSimilarMovieReady: false,\n                        isSimilarMovieLoading: false,\n                    })\n                    return\n                }\n                var afterSimilarMovies = similar;\n                afterSimilarMovies.forEach(similarMovie => {\n                    similarMovie.poster_path =\n                        \"https://image.tmdb.org/t/p/w185\" + similarMovie.poster_path;\n                });\n                if (afterSimilarMovies.length > 5) {\n                    this.setState({\n                        similarMovies: afterSimilarMovies.slice(0, 5),\n                        afterSimilarMovies: afterSimilarMovies,\n                        isSimilarMovieReady: true,\n                        isSimilarMovieLoading: false,\n                    });\n                } else {\n                    this.setState({\n                        similarMovies: afterSimilarMovies,\n                        afterSimilarMovies: afterSimilarMovies,\n                        isSimilarMovieReady: true,\n                        isSimilarMovieLoading: false,\n                    });\n                }\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    getBackgrounds(movieId) {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            movieId +\n            \"/images?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&include_image_language=en\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var backgrounds = searchResults.posters;\n                if (backgrounds.length === 0) {\n                    this.setState({ \n                        isBackgroundsReady: false,\n                        isBackgroundsLoading: false\n                    })\n                    return\n                }\n                var afterBackgrounds = backgrounds\n\n                afterBackgrounds.forEach(backdrop => {\n                    backdrop.file_path =\n                        \"https://image.tmdb.org/t/p/w185\" + backdrop.file_path;\n                });\n                if (afterBackgrounds.length > 5) {\n                    this.setState({\n                        backgrounds: afterBackgrounds.slice(0, 5),\n                        afterBackgrounds: afterBackgrounds,\n                        isBackgroundsReady: true,\n                        isBackgroundsLoading: false\n                    });\n                } else {\n                    this.setState({\n                        backgrounds: afterBackgrounds,\n                        afterBackgrounds: afterBackgrounds,\n                        isBackgroundsReady: true,\n                        isBackgroundsLoading: false\n                    });\n                }\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    getRecommendMovie(movieId) {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            movieId +\n            \"/recommendations?api_key=1e70c91a272209d404c18c8679f75072&language=en-US\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var recommend = searchResults.results;\n                if (recommend.length === 0) {\n                        this.setState({ \n                            isRecommendMovieReady: false,\n                            isRecommendMovieLoading:false\n                        })\n                    return\n                }\n                var afterRecommendMovies = recommend;\n                afterRecommendMovies.forEach(recommendMovie => {\n                    recommendMovie.backdrop_path =\n                        \"https://image.tmdb.org/t/p/w500\" + recommendMovie.backdrop_path;\n                });\n                if (afterRecommendMovies.length > 4) {\n                    this.setState({\n                        recommendMovies: afterRecommendMovies.slice(0, 4),\n                        afterRecommendMovies: afterRecommendMovies,\n                        isRecommendMovieReady: true,\n                        isRecommendMovieLoading:false\n                    });\n                } else {\n                    this.setState({\n                        recommendMovies: afterRecommendMovies,\n                        afterRecommendMovies: afterRecommendMovies,\n                        isRecommendMovieReady: true,\n                        isRecommendMovieLoading:false\n                    });\n                }\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    //get the detail info of the movie\n    getMovieDetail(movieId) {\n        const urlString = \"https://api.themoviedb.org/3/movie/\" +\n            movieId +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&append_to_response=credits\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var detail = searchResults;\n                var release_date = detail.release_date.split(\"-\");\n                detail.release_date = release_date[0];\n                var details = [];\n                details.push(detail);\n\n                var cast = detail.credits.cast;\n                if (cast.length === 0) {\n                        this.setState({ \n                            isTopBilledCastReady: false,\n                            isTopBilledCastLoading: false,\n                        })\n                } else {\n                    var afterCast = cast;\n\n                    afterCast.forEach(cast => {\n                        if (cast.profile_path !== null) {\n                            cast.profile_path =\n                                \"https://image.tmdb.org/t/p/w185\" + cast.profile_path;\n                        } else {\n                            cast.profile_path = \"https://style.anu.edu.au/_anu/4/images/placeholders/person_8x10.png\"\n                        }\n\n                    });\n                    if (afterCast.length > 5) {\n                        this.setState({\n                            cast: afterCast.slice(0, 5),\n                            afterCast: afterCast,\n                            isTopBilledCastReady: true,\n                            isTopBilledCastLoading: false\n                        });\n                    } else {\n                        this.setState({\n                            cast: afterCast,\n                            afterCast: afterCast,\n                            isTopBilledCastReady: true,\n                            isTopBilledCastLoading: false\n                        });\n                    }\n\n                }\n\n                var crew = detail.credits.crew;\n                var crewList = crew\n\n                if (crew.length > 10) {\n                    this.setState({\n                        crew: crewList.slice(0, 10),\n                        isCrewReady: true,\n                        isCrewLoading:false\n                    })\n                } else {\n                    this.setState({\n                        crew: crewList,\n                        isCrewReady: true,\n                        isCrewLoading:false\n                    })\n                }\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    handleAddMovieBlocks(movieBlock) {\n        console.log(\"click handleAddMovieBlocks:\", movieBlock)\n        if (movieBlock === \"recommend\") {\n            this.setState({\n                recommendMovies: new Array(...this.state.recommendMovies, ...this.state.afterRecommendMovies.slice(this.state.recommendMovies.length, Math.min(this.state.recommendMovies.length + 2), this.state.afterRecommendMovies.length))\n            })\n        } else if (movieBlock === \"similar\") {\n            this.setState({\n                similarMovies: new Array(...this.state.similarMovies, ...this.state.afterSimilarMovies.slice(this.state.similarMovies.length, Math.min(this.state.similarMovies.length + 5), this.state.afterSimilarMovies.length))\n            })\n        } else if (movieBlock === \"backgrounds\") {\n            this.setState({\n                backgrounds: new Array(...this.state.backgrounds, ...this.state.afterBackgrounds.slice(this.state.backgrounds.length, Math.min(this.state.backgrounds.length + 5), this.state.afterBackgrounds.length))\n            })\n        } else if (movieBlock === \"cast\") {\n            this.setState({\n                cast: new Array(...this.state.cast, ...this.state.afterCast.slice(this.state.cast.length, Math.min(this.state.cast.length + 5), this.state.afterCast.length))\n            })\n        }\n    }\n\n    onEnteredCalled() {\n        console.log(\"onEnteredCalled\")\n    }\n\n    onExitedCalled() {\n        console.log(\"onExitedCalled\")\n        this.props.hidePage()\n    }\n\n    handleNormalClick(event) {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    }\n    startHidePage() {\n        this.props.startHideDetailPage()\n    }\n\n    render() {\n        const isLoadingPage = this.state.movie === null ||\n            this.state.crew === null \n\n        if (isLoadingPage) {\n            return <div className=\"loading\">\n                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n            </div>\n        }\n        else {\n            return (\n                <CSSTransition\n                    in={this.state.slideIn}\n                    timeout={300}\n                    onEnter={this.onEnteredCalled.bind(this)}\n                    onExited={this.onExitedCalled.bind(this)}\n                    classNames='slide-animation'>\n                    <div className=\"modal-main\" id=\"modal-main\" onClick={this.handleNormalClick.bind(this)} style={{ backgroundColor: this.state.bgColor }} >\n                        <div class=\"container\" id=\"movie-detail-page\">\n                            <div className=\"marginbottom20 d-lg-none backtolistdiv row\" onClick={this.startHidePage.bind(this)}>\n                                <i class=\"fa fa-chevron-circle-left backtolisticon\" aria-hidden=\"true\"></i>\n                                <p class=\"backtolisttext\">Back To List</p>\n                            </div>\n                            <div class=\"row paddingtop_3\">\n                                <div class=\"col-xs-4 col-md-4 detailimage\">\n                                    <a href={this.props.movie.poster.replace(\"w500\", \"w1280\")} target=\"_blank\">\n                                        <ColorExtractor getColors={this.getPosterColors.bind(this, this.props.movie)}>\n                                            <img\n                                                class=\"detailimage-img\"\n                                                style={{ position: \"relative\" }}\n                                                alt=\"poster\"\n                                                id={this.props.movie.id}\n                                                src={this.props.movie.poster}\n                                            />\n                                        </ColorExtractor>\n                                    </a>\n                                </div>\n                                <div class=\"col-xs-8 col-md-8 detailinfo\">\n                                    <div class=\"row marginleft0 margintop20\">\n                                        <p class=\"detailtitle\" style={{ color: this.state.titleColor }}>{this.props.movie.title}</p>\n                                        <span className=\"detailyear\">({this.props.movie.release_date === undefined ? \"\" : this.props.movie.release_date.substring(0, 4)})</span>\n                                    </div>\n                                    <div class=\"row marginleft0 margintop20\">\n                                        <div className=\"col-xs-1 circlebar\">\n                                            <CircularProgressbar value={this.props.movie.vote_average * 10}\n                                                text={`${this.props.movie.vote_average * 10}%`}\n                                                styles={buildStyles({\n                                                    textColor: \"#fff\",\n                                                    pathColor: \"gold\",\n                                                    trailColor: \"white\"\n                                                })}\n                                            />\n                                        </div>\n                                        <p class=\"col-xs-1 detailaddwatchlist padding0_10\" onClick={this.handleAddMoveInWatchList.bind(this)} style={{ color: this.state.addButtonColor }}>Add To WatchList</p>\n                                    </div>\n                                    <div class=\"margintop20\">\n                                        <p class=\"detailblocktitle\" >OverView</p>\n                                        <p className=\"detailblocktext textjustify\" >{this.props.movie.overview}</p>\n                                    </div>\n                                    <div class={this.state.crew.length !== 0 ? \"margintop20 d-none d-lg-block\" : \"hideblock\"}>\n                                        <p class=\"detailblocktitle\" >Feature Crew</p>\n                                        <div class=\"row marginleft0 stuffcard\">\n                                            {this.state.crew.map(function (crew, index) {\n                                                return (\n                                                    <a key={crew.id} href={\"https://www.themoviedb.org/person/\" + crew.id + \"-\" + crew.name.replace(/ /g, \"-\")} target=\"_blank\">\n                                                        <div key={crew.id} className=\"col-xs-2 stuff\">\n                                                            {crew.name}\n                                                            <p className=\"stuffjob\">{crew.job}</p>\n                                                        </div>\n                                                    </a>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={this.state.crew.length  === 0 ? \"blockloading d-lg-none\" : \"hideblock\"}>\n                                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                            </div>\n                            <div class={this.state.crew.length !== 0 ? \"marginbottom20 d-lg-none\" : \"hideblock\"}>\n                                <div className=\"detailbigtitle\">\n                                    <p class=\"detailblocktitle\">Feature Crew</p>\n                                </div>\n                                <div class=\"marginleft0 stuffcard\">\n                                    {this.state.crew.map(function (crew, index) {\n                                        return (\n\n                                            <div className=\"row mobilecrewrow\">\n                                                <p className=\"mobilecrewname\">{crew.name}</p>\n                                                <p className=\"mobilecrewjob\">{crew.job}</p>\n                                            </div>\n\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className={this.state.isTopBilledCastLoading === true ? \"blockloading\" : \"hideblock\"}>\n                                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <div className={this.state.isTopBilledCastReady === true ? \"marginbottom20\" : \"marginbottom20 hideblock\"}>\n                                <div className=\"detailbigtitle\">\n                                    <p class=\"detailblocktitle\">Top Billed Cast</p>\n                                </div>\n                                <div className=\"row justify-content-md padding0_10 justfiy_center\">\n                                    {this.state.cast.map(function (cast, index) {\n                                        return (\n                                            <div key={cast.id} className=\"col-xs-2 padding5 castcard castdiv castdiv\">\n                                                <a className=\"height100\" href={\"https://www.themoviedb.org/person/\" + cast.id + \"-\" + cast.name.replace(/ /g, \"-\")} target=\"_blank\">\n                                                    <div className=\"card xs shadow-sm height100\" key={index}>\n                                                        <div className=\"card-img-top carddiv height90\">\n                                                            <img className=\"cardpostimage\" alt=\"profile\" src={cast.profile_path} />\n                                                        </div>\n                                                        <div>\n                                                            <p className=\"actertextname\">{cast.name}</p>\n                                                            <p className=\"actertextcharacter\">{cast.character}</p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        );\n                                    })}\n                                    <div className=\"col-md-12\">\n                                        <p className={this.state.cast.length === this.state.afterCast.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"cast\")}>...See More...</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={this.state.isRecommendMovieLoading === true ? \"blockloading\" : \"hideblock\"}>\n                                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <div className={this.state.isRecommendMovieReady === true ? \"marginbottom20 showblock\" : \"marginbottom20 hideblock\"}>\n                                <div className=\"detailbigtitle\">\n                                    <p class=\"detailblocktitle\">Recommend Movies</p>\n                                </div>\n                                <div className=\"row justify-content-md margin10_0 justfiy_center\">\n                                    {this.state.recommendMovies.map(function (recommendMovie, index) {\n                                        return (\n                                            <div key={recommendMovie.id} className=\"col-md-6 padding12_17 castcard\">\n                                                <a href={\"https://www.themoviedb.org/movie/\" + recommendMovie.id} target=\"_blank\">\n                                                    <div className=\"card xs shadow-sm height100\" key={index}>\n                                                        <div className=\"card-img-top carddiv height90\">\n                                                            <img className=\"cardpostimage\" alt=\"profile\" src={recommendMovie.backdrop_path} />\n                                                        </div>\n                                                        <div>\n                                                            <p className=\"actertextname\">{recommendMovie.title}</p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        );\n                                    })}\n                                    <div className=\"col-md-12\">\n                                        <p className={this.state.recommendMovies.length === this.state.afterRecommendMovies.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"recommend\")}>...See More...</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={this.state.isSimilarMovieLoading === true ? \"blockloading\" : \"hideblock\"}>\n                                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <div className={this.state.isSimilarMovieReady === true ? \"marginbottom20 showblock\" : \"marginbottom20 hideblock\"}>\n                                <div className=\"detailbigtitle\">\n                                    <p class=\"detailblocktitle\">Similar Movies</p>\n                                </div>\n                                <div className=\"row justify-content-md justfiy_center\">\n                                    {this.state.similarMovies.map(function (similarMovie, index) {\n                                        return (\n                                            <div key={similarMovie.id} className=\"col-xs-2 padding2_5 castcard similarmovie\">\n                                                <a href={\"https://www.themoviedb.org/movie/\" + similarMovie.id} target=\"_blank\">\n                                                    <div className=\"card xs shadow-sm height100\" key={index}>\n                                                        <div className=\"card-img-top carddiv height90\">\n                                                            <img className=\"cardpostimage\" alt=\"profile\" src={similarMovie.poster_path} />\n                                                        </div>\n                                                        <div>\n                                                            <p className=\"actertextname\">{similarMovie.title.length > 18 ? similarMovie.title.slice(0, 17) + \"...\" : similarMovie.title}</p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        );\n                                    })}\n                                    <div className=\"col-md-12\">\n                                        <p className={this.state.similarMovies.length === this.state.afterSimilarMovies.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"similar\")}>...See More...</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={this.state.isBackgroundsLoading === true ? \"blockloading\" : \"hideblock\"}>\n                                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <div className={this.state.isBackgroundsReady === true ? \"marginbottom50 showblock\" : \"marginbottom50 hideblock\"}>\n                                <div className=\"detailbigtitle\">\n                                    <p class=\"detailblocktitle\">Backgrounds</p>\n                                </div>\n                                <div className=\"row justify-content-md justfiy_center\">\n                                    {this.state.backgrounds.map(function (background, index) {\n                                        return (\n                                            <div key={index} className=\"col-xs padding2_5 castcard backgrounddiv\">\n                                                <a href={background.file_path.replace(\"w185\", \"w1280\")} target=\"_blank\">\n                                                    <div className=\"card xs shadow-sm height100\" key={index}>\n                                                        <img className=\"backgroundspostimage height100\" alt=\"profile\" src={background.file_path} />\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        );\n                                    })}\n                                    <div className=\"col-md-12\">\n                                        <p className={this.state.backgrounds.length === this.state.afterBackgrounds.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"backgrounds\")}>...See More...</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </CSSTransition>\n            )\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport './components/moviedetail.css'\nimport MoviePlayground from \"./components/MoviePlayground.js\";\nimport NaviBar from \"./components/NaviBar.js\"\nimport MovieSidePage from \"./components/MovieSidePage\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isClose: false,\n      routerUrl: \"/\",\n      movieDetail: undefined,\n      showMovieDetail:false,\n    };\n\n    this.gotoHomePage = this.gotoHomePage.bind(this)\n    this.gotoAllMoviePage = this.gotoAllMoviePage.bind(this)\n    this.gotoWatchListPage = this.gotoWatchListPage.bind(this)\n    this.gotoMovieCategoryPage = this.gotoMovieCategoryPage.bind(this)\n    this.gotoSearchPage = this.gotoSearchPage.bind(this)\n    this.hideMovieSidePage = this.hideMovieSidePage.bind(this)\n    this.startHideMovieSidePage = this.startHideMovieSidePage.bind(this)\n  }\n\n  gotoHomePage() {\n    var newUrl = \"/\"\n    this.setState({\n      routerUrl: newUrl\n    })\n    \n  }\n\n  gotoAllMoviePage() {\n    var newUrl = \"/movie\"\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoWatchListPage() {\n    var newUrl = \"/watchlist\"\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoMovieCategoryPage(category) {\n    var newUrl = \"/movie/\" + category\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoSearchPage(searchKey) {\n    var newUrl = \"/search/\" + searchKey\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  // avoid mutiple refresh\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.routerUrl !== this.state.routerUrl || nextState.movieDetail !== this.state.movieDetail || nextState.showMovieDetail !== this.state.showMovieDetail || nextState.isClose !== this.state.isClose) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  showMovieSidePage(movie) {\n    console.log(\"App id:\", movie.id)\n    this.setState({\n      movieDetail: {...movie},\n      showMovieDetail:true,\n    })      \n  }\n\n  startHideMovieSidePage() {\n    console.log(\"startHideMovieSidePage, \",this.state.isClose)\n    this.setState({\n      isClose: true,\n    }) \n  }\n\n  hideMovieSidePage() {\n    this.setState({\n      isClose: false,\n      showMovieDetail: !this.state.showMovieDetail,\n      movieDetail: undefined,\n    }) \n  }\n\n  render() {\n    const isMovieNull = this.state.movieDetail === undefined;\n    let movieDetail = null;\n    if (isMovieNull) {\n      movieDetail = <div></div>\n    } else {\n      movieDetail = <div className={this.state.showMovieDetail ? \"modal display-block\" : \"modal display-none\"} onClick={this.startHideMovieSidePage}>\n        <MovieSidePage showDetail={this.state.showMovieDetail} movie={this.state.movieDetail} isClose={this.state.isClose} hidePage={this.hideMovieSidePage} startHideDetailPage={this.startHideMovieSidePage}/>\n        </div>\n    }\n    return (\n        <div>\n          <div className=\"topnavi\">\n            <NaviBar style={{ position: \"sticky\" }} \n            gotoHomePage={this.gotoHomePage}\n            gotoAllMoviePage={this.gotoAllMoviePage}\n            gotoWatchListPage={this.gotoWatchListPage}\n            gotoMovieCategoryPage={this.gotoMovieCategoryPage}\n            gotoSearchPage={this.gotoSearchPage}\n            />\n          </div>\n          <div className=\"main\">\n            <MoviePlayground routerUrl={this.state.routerUrl} showDetail={this.showMovieSidePage.bind(this)}/>\n            {movieDetail}\n          </div>\n        </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}