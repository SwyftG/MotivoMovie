{"version":3,"sources":["animation.jsx","components/MovieBox.js","components/MoviePlayground.js","components/NaviBar.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["count","onEnter","console","time","props","onEntered","timeEnd","onExit","onExited","this","isIn","in","timeout","unmountOnExit","classNames","CSSTransition","children","currentChildren","constructor","Function","className","style","React","cloneElement","animationDuration","Component","defaultProps","MovieBox","state","index","showDetail","slideIn","bgColor","titleColor","addButtonColor","crew","cast","afterCast","similarMovies","afterSimilarMovies","recommendMovies","afterRecommendMovies","backgrounds","afterBackgrounds","isSimilarMovieReady","isRecommendMovieReady","isBackgroundsReady","isTopBilledCastReady","showMovieDetail","log","getMovieDetail","getSimilarMovie","getRecommendMovie","getBackgrounds","setState","event","stopPropagation","nativeEvent","stopImmediatePropagation","window","confirm","id","movie","removeMovieFromWatchList","localWatchlist","JSON","parse","localStorage","getItem","filter","e","setItem","stringify","showWatchlist","currentTarget","addToWatchList","alert","watchMovies","title","poster","overview","release_date","vote_average","Array","from","push","checkAvailable","watchlist","comp","map","i","final","indexOf","urlString","$","ajax","url","success","searchResults","detail","split","details","credits","length","forEach","profile_path","slice","error","xhr","status","err","similar","results","similarMovie","poster_path","recommend","recommendMovie","backdrop_path","movieBlock","Math","min","posters","backdrop","file_path","colors","scoreClassName","movieindex","showHideClassName","key","isShow","onClick","hideMovieDetail","bind","handleClose","handleNormalClick","onEnteredCalled","onEnterCalled","onExitedCalled","movieName","class","href","replace","target","getColors","getPosterColors","position","alt","src","color","undefined","substring","value","text","styles","buildStyles","textColor","pathColor","trailColor","handleAddMoveInWatchList","name","job","character","handleAddMovieBlocks","background","isWatchListMode","handleRemoveWatchList","MovieDetail","backgroundColor","MoviePlayground","componentWillReceiveProps","nextProps","message","routerUrl","updateComponent","fetchMoreData","movieBoxes","pageNumInt","pageNum","category","toString","date","vote","refs","filterQuery","toLowerCase","movies","concat","hasMore","pageType","hasData","nextState","pathlist","searchCategory","searchMovieByCategory","searchKey","searchMovieByName","tempWatchlist","prototype","call","setTimeout","searchKeyword","filterQueryKey","newList","type","aria-label","placeholder","ref","onChange","handlerFilter","dataLength","next","loader","NaviBar","handleEnterKey","keyCode","handleSumbit","gotoSearchPage","gotoHomePage","gotoAllMoviePage","gotoWatchListPage","gotoMovieCategoryPage","role","handleHomepage","data-toggle","data-target","aria-controls","aria-expanded","handleAllMovie","aria-haspopup","aria-labelledby","handleCategoryMovie","handleWatchList","onKeyPress","App","newUrl","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9e9bf224.chunk.js","sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nlet count = 0\nexport default class Animation extends React.Component {\n  static defaultProps = {\n    in: true,\n    timeout: 1000,\n    unmountOnExit: true,\n    classNames: '',\n    onEnter () {},\n    onEntered () {},\n    onExit () {},\n    onExited () {}\n  }\n  constructor () {\n    super()\n    this.count = count++\n  }\n  onEnter = () => {\n    console.time(`enter${this.count}`)\n    this.props.onEnter()\n  }\n  onEntered = () => {\n    console.timeEnd(`enter${this.count}`)\n    this.props.onEntered()\n  }\n  onExit = () => {\n    console.time(`exit${this.count}`)\n    this.props.onExit()\n  }\n  onExited = () => {\n    console.timeEnd(`exit${this.count}`)\n    this.props.onExited()\n  }\n  get children () {\n    const { children, timeout } = this.props\n    let currentChildren = children\n    if (children.constructor !== Function) {\n      const {\n        props: { className = '', style = {} }\n      } = children\n\n      currentChildren = React.cloneElement(children, {\n        className: `animated ${className}`,\n        style: {\n          ...{\n            '--webkit-animation-duration': `${timeout}ms`,\n            animationDuration: `${timeout}ms`\n          },\n          ...style\n        }\n      })\n    }\n\n    return currentChildren\n  }\n\n  render () {\n    const { in: isIn, timeout, unmountOnExit, classNames } = this.props\n\n    return (\n      <CSSTransition\n        in={isIn}\n        timeout={timeout}\n        unmountOnExit={unmountOnExit}\n        classNames={classNames}\n        onEnter={this.onEnter}\n        onEntered={this.onEntered}\n        onExit={this.onExit}\n        onExited={this.onExited}\n      >\n        {this.children}\n      </CSSTransition>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./moviebox.css\";\nimport \"./moviedetail.css\"\n\nimport $ from \"jquery\";\nimport Animation from '../animation'\nimport { CSSTransition } from 'react-transition-group';\nimport { ColorExtractor } from \"react-color-extractor\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nclass MovieBox extends Component {\n    state = {\n        index: 0,\n        showDetail: false,\n        slideIn: false,\n        bgColor: \"#3caf8e\",\n        titleColor:\"#edb05b\",\n        addButtonColor: \"#000000\",\n        crew: [],\n        cast: [],\n        afterCast: [],\n        similarMovies: [],\n        afterSimilarMovies: [],\n        recommendMovies: [],\n        afterRecommendMovies: [],\n        backgrounds: [],\n        afterBackgrounds: [],\n        isSimilarMovieReady: false,\n        isRecommendMovieReady: false,\n        isBackgroundsReady: false,\n        isTopBilledCastReady: false,\n    };\n\n    handleNormalClick(event) {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    }\n\n    handleRemoveWatchList(event) {\n        var popconfirm = window.confirm(\"Do you want to delet this movie from watchlist?\")\n        if (popconfirm) {\n            var id = this.props.movie.id;\n            this.removeMovieFromWatchList(id);\n        }\n    }\n\n    // remove the movie from watchlist\n    removeMovieFromWatchList(id) {\n        var localWatchlist = JSON.parse(localStorage.getItem(\"motiveWatchList\"));\n        localWatchlist = localWatchlist.filter(function (e) {\n            return e.id !== id;\n        });\n        localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n        this.props.showWatchlist();\n    }\n\n    hideMovieDetail(event) {\n        if (event.currentTarget.id === \"blure\" && this.state.showDetail) {\n            this.setState({\n                slideIn: false,\n            });\n        }\n    };\n\n    handleAddMoveInWatchList(event) {\n        var id = this.props.movie.id;\n        this.addToWatchList(id);\n        alert(\"Done. Alread add movie to watch list.\")\n    }\n    // add the movie in watchlist\n    addToWatchList(id) {\n        var watchMovies = {\n            id: id,\n            title: this.props.movie.title,\n            poster: this.props.movie.poster,\n            overview: this.props.movie.overview,\n            release_date: this.props.movie.release_date,\n            vote_average: this.props.movie.vote_average\n        };\n\n        var localWatchlist = [];\n        if (localStorage.getItem(\"motiveWatchList\") !== null) {\n            localWatchlist = Array.from(\n                JSON.parse(localStorage.getItem(\"motiveWatchList\"))\n            );\n            if (localWatchlist) {\n                localWatchlist.push(watchMovies);\n                localWatchlist = this.checkAvailable(localWatchlist, \"id\");\n                localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n            }\n        } else {\n            localWatchlist.push(watchMovies);\n            localStorage.setItem(\"motiveWatchList\", JSON.stringify(localWatchlist));\n        }\n    }\n\n    checkAvailable(watchlist, comp) {\n        const unique = watchlist\n            .map(e => e[comp])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => watchlist[e])\n            .map(e => watchlist[e]);\n        return unique;\n    }\n    //get the detail info of the movie\n    getMovieDetail() {\n        const urlString = \"https://api.themoviedb.org/3/movie/\" +\n            this.props.movie.id +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&append_to_response=credits\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var detail = searchResults;\n                var release_date = detail.release_date.split(\"-\");\n                detail.release_date = release_date[0];\n                var details = [];\n                details.push(detail);\n\n                var cast = detail.credits.cast;\n                if (cast.length === 0) {\n                    if (this.state.isTopBilledCastReady) {\n                        this.setState({ isTopBilledCastReady: false })\n                    }\n                } else {\n                    var afterCast = cast;\n\n                    afterCast.forEach(cast => {\n                        if (cast.profile_path !== null) {\n                            cast.profile_path =\n                            \"https://image.tmdb.org/t/p/w185\" + cast.profile_path;\n                        } else {\n                            cast.profile_path = \"https://style.anu.edu.au/_anu/4/images/placeholders/person_8x10.png\"\n                        }\n                        \n                    });\n                    if (afterCast.length > 5) {\n                        this.setState({\n                            cast: afterCast.slice(0, 5),\n                            afterCast: afterCast,\n                            isTopBilledCastReady: true\n                        });\n                    } else {\n                        this.setState({\n                            cast: afterCast,\n                            afterCast: afterCast,\n                            isTopBilledCastReady: true\n                        });\n                    }\n\n                }\n\n                var crew = detail.credits.crew;\n                if (crew.length > 8) {\n                    crew = crew.slice(0, 8);\n                }\n\n                this.setState({ detail: details });\n                this.setState({ crew: crew });\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    getSimilarMovie() {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            this.props.movie.id +\n            \"/similar?api_key=1e70c91a272209d404c18c8679f75072&language=en-US\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var similar = searchResults.results;\n                if (similar.length === 0) {\n                    if (this.setState.isSimilarMovieReady) {\n                        this.setState({ isSimilarMovieReady: false })\n                    }\n                    return\n                }\n                var afterSimilarMovies = similar;\n                afterSimilarMovies.forEach(similarMovie => {\n                    similarMovie.poster_path =\n                        \"https://image.tmdb.org/t/p/w185\" + similarMovie.poster_path;\n                });\n                if (afterSimilarMovies.length > 5) {\n                    this.setState({\n                        similarMovies: afterSimilarMovies.slice(0, 5),\n                        afterSimilarMovies: afterSimilarMovies,\n                        isSimilarMovieReady: true\n                    });\n                } else {\n                    this.setState({\n                        similarMovies: afterSimilarMovies,\n                        afterSimilarMovies: afterSimilarMovies,\n                        isSimilarMovieReady: true\n                    });\n                }\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    getRecommendMovie() {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            this.props.movie.id +\n            \"/recommendations?api_key=1e70c91a272209d404c18c8679f75072&language=en-US\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var recommend = searchResults.results;\n                if (recommend.length === 0) {\n                    if (this.state.isRecommendMovieReady) {\n                        this.setState({ isRecommendMovieReady: false })\n                    }\n                    return\n                }\n                var afterRecommendMovies = recommend;\n                afterRecommendMovies.forEach(recommendMovie => {\n                    recommendMovie.backdrop_path =\n                        \"https://image.tmdb.org/t/p/w500\" + recommendMovie.backdrop_path;\n                });\n                if (afterRecommendMovies.length > 4) {\n                    this.setState({\n                        recommendMovies: afterRecommendMovies.slice(0, 4),\n                        afterRecommendMovies: afterRecommendMovies,\n                        isRecommendMovieReady: true\n                    });\n                } else {\n                    this.setState({\n                        recommendMovies: afterRecommendMovies,\n                        afterRecommendMovies: afterRecommendMovies,\n                        isRecommendMovieReady: true\n                    });\n                }\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    handleAddMovieBlocks(movieBlock) {\n        console.log(\"click handleAddMovieBlocks:\", movieBlock)\n        if (movieBlock === \"recommend\") {\n            this.setState({\n                recommendMovies: new Array(...this.state.recommendMovies, ...this.state.afterRecommendMovies.slice(this.state.recommendMovies.length, Math.min(this.state.recommendMovies.length + 2), this.state.afterRecommendMovies.length))\n            })\n        } else if (movieBlock === \"similar\") {\n            this.setState({\n                similarMovies: new Array(...this.state.similarMovies, ...this.state.afterSimilarMovies.slice(this.state.similarMovies.length, Math.min(this.state.similarMovies.length + 5), this.state.afterSimilarMovies.length))\n            })\n        } else if (movieBlock === \"backgrounds\") {\n            this.setState({\n                backgrounds: new Array(...this.state.backgrounds, ...this.state.afterBackgrounds.slice(this.state.backgrounds.length, Math.min(this.state.backgrounds.length + 5), this.state.afterBackgrounds.length))\n            })\n        } else if (movieBlock === \"cast\") {\n            this.setState({\n                cast: new Array(...this.state.cast, ...this.state.afterCast.slice(this.state.cast.length, Math.min(this.state.cast.length + 5), this.state.afterCast.length))\n            })\n        }\n\n    }\n\n    getBackgrounds() {\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            this.props.movie.id +\n            \"/images?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&include_image_language=en\";\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                var backgrounds = searchResults.posters;\n                if (backgrounds.length === 0) {\n                    if (this.state.isBackgroundsReady) {\n                        this.setState({ isBackgroundsReady: false })\n                    }\n                    return\n                }\n                var afterBackgrounds = backgrounds\n\n                afterBackgrounds.forEach(backdrop => {\n                    backdrop.file_path =\n                        \"https://image.tmdb.org/t/p/w185\" + backdrop.file_path;\n                });\n                if (afterBackgrounds.length > 5) {\n                    this.setState({\n                        backgrounds: afterBackgrounds.slice(0, 5),\n                        afterBackgrounds: afterBackgrounds,\n                        isBackgroundsReady: true\n                    });\n                } else {\n                    this.setState({\n                        backgrounds: afterBackgrounds,\n                        afterBackgrounds: afterBackgrounds,\n                        isBackgroundsReady: true\n                    });\n                }\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    showMovieDetail = () => {\n        console.log(\"click\");\n        this.getMovieDetail();\n        this.getSimilarMovie();\n        this.getRecommendMovie();\n        this.getBackgrounds();\n        this.setState({\n            showDetail: true,\n            slideIn: true,\n        });\n    };\n\n    onEnterCalled() {\n        if (this.state.showDetail === false && this.state.slideIn) {\n            this.setState({\n                showDetail: true,\n            })\n        }\n    }\n\n    onExitedCalled() {\n        if (this.state.showDetail && !this.state.slideIn) {\n            this.setState({\n                showDetail: false,\n            })\n        }\n    }\n\n    getPosterColors(movie, colors) {\n        this.setState({\n            bgColor: colors[0],\n            titleColor: colors[1],\n            addButtonColor: colors[4],\n        })\n\n    }\n\n    render() {\n        var scoreClassName = \"postscore\"\n        if (this.props.movieindex === 0) {\n            scoreClassName = \"postscore scprenum1\"\n        } else if (this.props.movieindex === 1) {\n            scoreClassName = \"postscore scprenum2\"\n        } else if (this.props.movieindex === 2) {\n            scoreClassName = \"postscore scprenum3\"\n        }\n        const showHideClassName = this.state.showDetail ? \"modal display-block\" : \"modal display-none\";\n        const processSlice = this.props.movie.vote_average * 10 / 5\n        return (\n            <div key={this.props.movie.id} className={this.props.movie.isShow === true ? \"col-xs-6 col-sm-3 visibility-visible marginbottom1rem\" : \"display-none\"}>\n                <div className={showHideClassName} onClick={this.hideMovieDetail.bind(this)} id=\"blure\">\n                    <MovieDetail showDetail={this.state.showDetail} handleClose={this.hideMovieDetail.bind(this)} handleNormalClick={this.handleNormalClick.bind(this)} slideIn={this.state.slideIn} onEnteredCalled={this.onEnterCalled.bind(this)} onExitedCalled={this.onExitedCalled.bind(this)} movieName={this.props.movie.title} bgColor={this.state.bgColor}>\n                        <div class=\"row paddingtop_3\">\n                            <div class=\"col-xs-4 col-md-4 detailimage\">\n                                <a href={this.props.movie.poster.replace(\"w500\", \"w1280\")} target=\"_blank\">\n                                    <ColorExtractor getColors={this.getPosterColors.bind(this, this.props.movie)}>\n                                    <img\n                                        class=\"detailimage-img\"\n                                        style={{ position: \"relative\" }}\n                                        alt=\"poster\"\n                                        id={this.props.movie.id}\n                                        src={this.props.movie.poster}\n                                    />\n                                    </ColorExtractor>\n                                </a>\n                            </div>\n                            <div class=\"col-xs-7 col-md-7 detailinfo\">\n                                <div class=\"row marginleft0 margintop20\">\n                                    <p class=\"detailtitle\" style={{color: this.state.titleColor}}>{this.props.movie.title}</p>\n                                    <span>({this.props.movie.release_date === undefined ? \"\" : this.props.movie.release_date.substring(0, 4)})</span>\n                                </div>\n                                <div class=\"row marginleft0 margintop20\">\n                                    <div className=\"col-xs-1 circlebar\">\n                                        <CircularProgressbar value={this.props.movie.vote_average * 10} \n                                        text={`${this.props.movie.vote_average * 10}%`} \n                                        styles={buildStyles({\n                                            textColor: \"#fff\",\n                                            pathColor: \"gold\",\n                                            trailColor: \"white\"\n                                          })}\n                                        />\n                                    </div>\n                                    <p class=\"col-xs-1 detailaddwatchlist padding0_10\" onClick={this.handleAddMoveInWatchList.bind(this)} style={{color: this.state.addButtonColor}}>Add To WatchList</p>\n                                </div>\n                                <div class=\"margintop20\">\n                                    <p class=\"detailblocktitle\" >OverView</p>\n                                    <p className=\"detailblocktext textjustify\" >{this.props.movie.overview}</p>\n                                </div>\n                                <div class={this.state.crew.length !== 0 ? \"margintop20\" : \"hideblock\"}>\n                                    <p class=\"detailblocktitle\" >Feature Crew</p>\n                                    <div class=\"row marginleft0 stuffcard\">\n                                        {this.state.crew.map(function (crew, index) {\n                                            return (\n                                                <a key={crew.id} href={\"https://www.themoviedb.org/person/\" + crew.id + \"-\" + crew.name.replace(/ /g, \"-\")} target=\"_blank\">\n                                                    <div key={crew.id} className=\"col-xs-2 stuff\">\n                                                        {crew.name}\n                                                        <p className=\"stuffjob\">{crew.job}</p>\n                                                    </div>\n                                                </a>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={this.state.isTopBilledCastReady === true ? \"marginbottom20\" : \"marginbottom20 hideblock\"}>\n                            <div className=\"detailbigtitle\">\n                                <p class=\"detailblocktitle\">Top Billed Cast</p>\n                            </div>\n                            <div className=\"row marginleft20 justify-content-md padding0_10\">\n                                {this.state.cast.map(function (cast, index) {\n                                    return (\n                                        <div key={cast.id} className=\"col-xs-2 padding5 castcard castdiv\">\n                                            <a className=\"height100\" href={\"https://www.themoviedb.org/person/\" + cast.id + \"-\" + cast.name.replace(/ /g, \"-\")} target=\"_blank\">\n                                                <div className=\"card xs shadow-sm height100\" key={index}>\n                                                    <div className=\"card-img-top carddiv height90\">\n                                                        <img className=\"cardpostimage\" alt=\"profile\" src={cast.profile_path} />\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"actertextname\">{cast.name}</p>\n                                                        <p className=\"actertextcharacter\">{cast.character}</p>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    );\n                                })}\n                                <div className=\"col-md-12\">\n                                    <p className={this.state.cast.length === this.state.afterCast.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"cast\")}>...See More...</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={this.state.isRecommendMovieReady === true ? \"marginbottom20 showblock\" : \"marginbottom20 hideblock\"}>\n                            <div className=\"detailbigtitle\">\n                                <p class=\"detailblocktitle\">Recommend Movies</p>\n                            </div>\n                            <div className=\"row justify-content-md margin10_0\">\n                                {this.state.recommendMovies.map(function (recommendMovie, index) {\n                                    return (\n                                        <div key={recommendMovie.id} className=\"col-md-6 padding12_17 castcard\">\n                                            <a href={\"https://www.themoviedb.org/movie/\" + recommendMovie.id} target=\"_blank\">\n                                                <div className=\"card xs shadow-sm height100\" key={index}>\n                                                    <div className=\"card-img-top carddiv height90\">\n                                                        <img className=\"cardpostimage\" alt=\"profile\" src={recommendMovie.backdrop_path} />\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"actertextname\">{recommendMovie.title}</p>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    );\n                                })}\n                                <div className=\"col-md-12\">\n                                    <p className={this.state.recommendMovies.length === this.state.afterRecommendMovies.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"recommend\")}>...See More...</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={this.state.isSimilarMovieReady === true ? \"marginbottom20 showblock\" : \"marginbottom20 hideblock\"}>\n                            <div className=\"detailbigtitle\">\n                                <p class=\"detailblocktitle\">Similar Movies</p>\n                            </div>\n                            <div className=\"row marginleft20 justify-content-md\">\n                                {this.state.similarMovies.map(function (similarMovie, index) {\n                                    return (\n                                        <div key={similarMovie.id} className=\"col-xs-2 padding2_5 castcard\">\n                                            <a href={\"https://www.themoviedb.org/movie/\" + similarMovie.id} target=\"_blank\">\n                                                <div className=\"card xs shadow-sm height100\" key={index}>\n                                                    <div className=\"card-img-top carddiv height90\">\n                                                        <img className=\"cardpostimage\" alt=\"profile\" src={similarMovie.poster_path} />\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"actertextname\">{similarMovie.title.length > 18 ? similarMovie.title.slice(0, 17) + \"...\" : similarMovie.title}</p>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    );\n                                })}\n                                <div className=\"col-md-12\">\n                                    <p className={this.state.similarMovies.length === this.state.afterSimilarMovies.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"similar\")}>...See More...</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={this.state.isBackgroundsReady === true ? \"marginbottom50 showblock\" : \"marginbottom50 hideblock\"}>\n                            <div className=\"detailbigtitle\">\n                                <p class=\"detailblocktitle\">Backgrounds</p>\n                            </div>\n                            <div className=\"row marginleft20 justify-content-md\">\n                                {this.state.backgrounds.map(function (background, index) {\n                                    return (\n                                        <div key={index} className=\"col-xs padding2_5 castcard\">\n                                            <a href={background.file_path.replace(\"w185\", \"w1280\")} target=\"_blank\">\n                                                <div className=\"card xs shadow-sm height100\" key={index}>\n                                                    <img className=\"backgroundspostimage height100\" alt=\"profile\" src={background.file_path} />\n                                                </div>\n                                            </a>\n                                        </div>\n                                    );\n                                })}\n                                <div className=\"col-md-12\">\n                                    <p className={this.state.backgrounds.length === this.state.afterBackgrounds.length ? \"visibility-hidden\" : \"visibility-visible addmore-text text-center\"} onClick={this.handleAddMovieBlocks.bind(this, \"backgrounds\")}>...See More...</p>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </MovieDetail>\n                </div>\n                <div className=\"card md-3 shadow-sm\" id={this.props.movie.id} onClick={this.props.isWatchListMode === false ? this.showMovieDetail.bind(this) : this.handleRemoveWatchList.bind(this)} >\n                    <div className=\"poster hovereffect\">\n                        <img\n                            class=\"postimage\"\n                            id={this.props.movie.id}\n                            src={this.props.movie.poster}\n                        />\n                        <div class=\"overlay\">\n                            <p className=\"textjustify\">{this.props.movie.overview}</p>\n                        </div>\n                        <div class={scoreClassName}>\n                            <strong class=\"postscoretext\">{this.props.movie.vote_average}</strong>\n                        </div>\n                    </div>\n                    <div class=\"titlerow\">\n                        <p class=\"titlerowleft\">{this.props.movie.title}</p>\n                        <p class=\"titlerowright\">{this.props.movie.release_date}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n//Movie detail page\nconst MovieDetail = ({ handleClose, handleNormalClick, showDetail, children, slideIn, onEnteredCalled, onExitedCalled, movieName, bgColor}) => {\n    return (\n        <CSSTransition\n            in={slideIn}\n            timeout={300}\n            onEnter={onEnteredCalled}\n            onExited={onExitedCalled}\n            classNames='slide-animation'>\n            <div className=\"modal-main\" onClick={handleNormalClick} id=\"modal-main\" style={{backgroundColor: bgColor}}>\n                <div class=\"container\">\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default MovieBox;\n","import React, { Component } from \"react\";\nimport MovieBox from \"./MovieBox.js\";\nimport \"./moviedetail.css\"\nimport $ from \"jquery\";\nimport { withRouter } from \"react-router\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass MoviePlayground extends Component {\n    constructor(props) {\n        super(props);\n        const { routerUrl } = this.props.routerUrl;\n        this.state = {\n            movies: [],\n            hasMore: true,\n            isWatchListMode: false,\n            pageType: \"category\",\n            pageNum: 1,\n            category: \"popular\",\n            routerUrl: \"/\",\n            hasData: false,\n        };\n        this.pageNum = 5;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.routerUrl === this.state.routerUrl) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        var message = \"componentWillReceiveProps:\" + nextProps.routerUrl\n        this.updateComponent(nextProps.routerUrl, message)\n        this.setState({\n            routerUrl: nextProps.routerUrl\n        })\n    }\n\n    // processing with different url\n    componentDidMount() {\n        this.updateComponent(\"/\", \"entry\")\n    }\n\n    updateComponent(url, from) {\n        var pathlist = url.split(\"/\")\n        var searchCategory = \"popular\"\n        console.log(\"updateComponent:: \", pathlist)\n        if (pathlist.length > 1 && pathlist[1] === \"watchlist\") {\n            this.setState({\n                hasMore: false,\n                isWatchListMode: true,\n                pageType: \"watchlist\",\n            })\n            this.showWatchlist()\n            return\n        }\n        if (pathlist.length === 3 && pathlist[1] === \"search\" && pathlist[2] !== \"\") {\n            this.setState({\n                hasMore: false,\n                isWatchListMode: false,\n                pageType: \"search\",\n            })\n            var searchKey = pathlist[2]\n            this.searchMovieByName(searchKey);\n            return\n        }\n        if (pathlist.length === 3 && pathlist[1] === \"movie\" && (pathlist[2] === \"top_rated\" || pathlist[2] === \"upcoming\" || pathlist[2] === \"now_playing\")) {\n            searchCategory = pathlist[2]\n        }\n        this.setState({\n            isWatchListMode: false,\n            hasMore: true,\n            pageType: \"category\",\n        })\n        this.searchMovieByCategory(searchCategory);\n    }\n\n    //grab the watch list and show them\n    showWatchlist() {\n        var movieBoxes = [];\n        var tempWatchlist = [];\n        var localWatchlist = [];\n        localWatchlist = JSON.parse(localStorage.getItem(\"motiveWatchList\"));\n        console.log(localWatchlist)\n        if (localWatchlist) {\n            tempWatchlist = localWatchlist;\n        }\n        Array.prototype.forEach.call(tempWatchlist, movie => {\n            movie.isShow = true\n            movieBoxes.push(movie);\n        });\n        setTimeout(() => {\n            this.setState({\n                movies: movieBoxes,\n                hasData: true,\n            });\n        }, 0);\n    }\n\n    // filter movies by cateogyr, only four kinds: popular, top_rated, upcoming and now_playing\n    searchMovieByCategory(searchCategory) {\n        var movieBoxes = [];\n        setTimeout(() => {\n            this.setState({\n                movies: [],\n                category: searchCategory,\n                pageNum: 1,\n                hasData: false,\n            });\n        }, 0);\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            searchCategory +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&page=1\";\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                results.forEach(movie => {\n                    movie.poster =\n                        \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    movie.isShow = true\n                    movieBoxes.push(movie);\n                });\n\n                setTimeout(() => {\n                    this.setState({\n                        movies: movieBoxes,\n                        hasData: true,\n                    });\n                }, 0);\n\n            },\n            error: (xhr, status, err) => {\n                console.error(\"Failed to fetch movie data, 10001\");\n            }\n        });\n    }\n\n\n    // search movies by input keyword\n    searchMovieByName(searchKeyword) {\n        const urlString =\n            \"https://api.themoviedb.org/3/search/movie?api_key=1e70c91a272209d404c18c8679f75072&query=\" +\n            searchKeyword;\n\n        this.setState({\n            movies: [],\n            hasData: false,\n        });\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                var movieBoxes = [];\n                results.forEach(movie => {\n                    if (movie.poster_path !== null) {\n                        movie.poster =\n                            \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    } else {\n                        movie.poster =\n                            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSB-hMdo9NAj_4K1vtOpJ-DxQO-d_7Uoh8kUV7C6i32ebTW3NBGQQ&s\";\n                    }\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    movie.isShow = true\n                    movieBoxes.push(movie);\n                });\n\n                this.setState({\n                    movies: movieBoxes,\n                    hasData: true,\n                });\n            },\n            error: (xhr, status, err) => {\n\n                console.error(\"Failed to fetch data\");\n            }\n        });\n    }\n\n    fetchMoreData = () => {\n        var movieBoxes = [];\n        var pageNumInt = this.state.pageNum + 1\n        this.setState({\n            pageNum: pageNumInt,\n        })\n        const urlString =\n            \"https://api.themoviedb.org/3/movie/\" +\n            this.state.category +\n            \"?api_key=1e70c91a272209d404c18c8679f75072&language=en-US&page=\" + pageNumInt.toString();\n        console.log(\"url: \", urlString)\n\n        $.ajax({\n            url: urlString,\n            success: searchResults => {\n                const results = searchResults.results;\n                results.forEach(movie => {\n                    movie.poster =\n                        \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n                    if (movie.release_date === undefined) {\n                        return\n                    }\n                    var date = movie.release_date.replace(/-/g, \"/\");\n                    movie.release_date = date;\n                    var vote = movie.vote_average.toString()\n                    if (vote.length === 1) {\n                        vote = vote + \".0\"\n                    }\n                    movie.vote_average = vote\n                    if (this.refs.filterQuery.value.toLowerCase().length !== 0 ) {\n                        if (movie.title.toLowerCase().indexOf(this.refs.filterQuery.value.toLowerCase()) >= 0) {\n                            movie.isShow = true\n                        } else {\n                            movie.isShow = false\n                        }\n                    } else {\n                        movie.isShow = true\n                    }\n                    movieBoxes.push(movie);\n                });\n                this.setState({\n                    movies: this.state.movies.concat(movieBoxes),\n                });\n            },\n            error: (xhr, status, err) => {\n                console.log(err)\n                console.error(\"Failed to fetch movie data, 10001\");\n            }\n        });\n    };\n\n    handlerFilter() {\n        let filterQueryKey = this.refs.filterQuery.value.toLowerCase();\n        const newList = this.state.movies\n        newList.forEach(movie => {\n            var oriTiele = movie.title.toLowerCase()\n            if (oriTiele.indexOf(filterQueryKey) >= 0) {\n                movie.isShow = true;\n            } else {\n                movie.isShow = false;\n            }\n        })\n        this.setState({\n            movies: newList,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row margintop20 padding0_10\">\n                    <div class={this.state.pageType === \"category\" ? \"input-group \" : \"display-none\"}>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Filter Movie</span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" placeholder=\"input text\" ref=\"filterQuery\" onChange={this.handlerFilter.bind(this)} />\n                    </div>\n\n                    <InfiniteScroll\n                        className=\"row infinitrow\"\n                        dataLength={this.state.movies.length}\n                        next={this.fetchMoreData.bind(this)}\n                        hasMore={this.state.hasMore}\n                        loader={<h4>Loading...</h4>}>\n                        {this.state.movies.map((movie, index) => (\n                            <MovieBox key={movie.id} movie={movie} movieindex={this.state.pageType === \"category\" ? index : 4} isWatchListMode={this.state.isWatchListMode} showWatchlist={this.showWatchlist.bind(this)} />\n                        ))}\n                    </InfiniteScroll>\n                </div>\n                <div className={this.state.movies.length === 0 ? \"showblock\" : \"hideblock\"} >\n                    <h1 className={this.state.hasData ? \"showblock showincenter\" : \"hideblock\"}>NoData</h1>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default MoviePlayground;","import React, { Component } from \"react\";\n\n\n\nclass NaviBar extends Component {\n    state = {};\n\n    handleSumbit(event) {\n        let searchKey = this.refs.searchKey.value;\n        this.props.gotoSearchPage(searchKey)\n    }\n\n    handleHomepage() {\n        this.props.gotoHomePage();\n    }\n\n    handleAllMovie() {\n        this.props.gotoAllMoviePage();\n    }\n\n    handleWatchList() {\n        this.props.gotoWatchListPage();\n    }\n\n    handleCategoryMovie(category) {\n        this.props.gotoMovieCategoryPage(category);\n    }\n\n    handleEnterKey = (e) => {\n        if(e.nativeEvent.keyCode === 13){\n             this.handleSumbit()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\" role=\"navigation\">\n                    <p class=\"navbar-brand\" onClick={this.handleHomepage.bind(this)}>MotivoMovie</p>\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul class=\"navbar-nav mr-auto\">\n                            <li class=\"nav-item active\">\n                                <p class=\"nav-link\" onClick={this.handleAllMovie.bind(this)}>All Movies <span class=\"sr-only\">(current)</span></p>\n                            </li>\n                            <li class=\"nav-item dropdown\">\n                                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    Categorys\n        </a>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"popular\")}>Popular</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"top_rated\")}>Top Rated</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"upcoming\")}>Uncoming</a>\n                                    <a class=\"dropdown-item\" onClick={this.handleCategoryMovie.bind(this, \"now_playing\")}>Now Playing</a>\n                                </div>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" onClick={this.handleWatchList.bind(this)}>Watch List</a>\n                            </li>\n                        </ul>\n                        <div class=\"form-inline my-2 my-lg-0\" >\n                            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search Movie\" ref=\"searchKey\" onKeyPress={this.handleEnterKey}/>\n                            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={this.handleSumbit.bind(this)}>Search</button>\n                        </div>\n                    </div>\n                </nav>\n\n            </div>\n        );\n    }\n}\n\nexport default NaviBar;\n\n","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport MoviePlayground from \"./components/MoviePlayground.js\";\nimport NaviBar from \"./components/NaviBar.js\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      routerUrl: \"/\",\n    };\n\n    this.gotoHomePage = this.gotoHomePage.bind(this)\n    this.gotoAllMoviePage = this.gotoAllMoviePage.bind(this)\n    this.gotoWatchListPage = this.gotoWatchListPage.bind(this)\n    this.gotoMovieCategoryPage = this.gotoMovieCategoryPage.bind(this)\n    this.gotoSearchPage = this.gotoSearchPage.bind(this)\n    \n  }\n\n  gotoHomePage() {\n    var newUrl = \"/\"\n    this.setState({\n      routerUrl: newUrl\n    })\n    \n  }\n\n  gotoAllMoviePage() {\n    var newUrl = \"/movie\"\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoWatchListPage() {\n    var newUrl = \"/watchlist\"\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoMovieCategoryPage(category) {\n    var newUrl = \"/movie/\" + category\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  gotoSearchPage(searchKey) {\n    var newUrl = \"/search/\" + searchKey\n    this.setState({\n      routerUrl: newUrl\n    })\n  }\n\n  // avoid mutiple refresh\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.routerUrl !== this.state.routerUrl) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  render() {\n\n    return (\n        <div>\n          <div className=\"topnavi\">\n            <NaviBar style={{ position: \"sticky\" }} \n            gotoHomePage={this.gotoHomePage}\n            gotoAllMoviePage={this.gotoAllMoviePage}\n            gotoWatchListPage={this.gotoWatchListPage}\n            gotoMovieCategoryPage={this.gotoMovieCategoryPage}\n            gotoSearchPage={this.gotoSearchPage}\n            />\n          </div>\n          <div className=\"main\">\n            <MoviePlayground routerUrl={this.state.routerUrl} />\n          </div>\n        </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}